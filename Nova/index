index (<Array E> arr, Int i) = if minus i
                                 error "Negative index"
                                 else
                                 fastindex (arr, i)

index ([E] tab, Int i) = if n < tab.size then index (tab.array, n)
                           else
                           error "Index out of bounds"

index ({E} seq, Int i) = if n < length of seq then index (seq.array, i + seq.start)
                           else
                           error "Index out of bounds"

index (<List E> ls, Int i) = if ls
                               if n == 0 then ls.car
                                 else ls.cdr@(i - 1)
                               else
                               error "Index out of bounds"

index ([Int] ns, Matrix m)
  index (rec (sum = 0
              size = 1
              i = ns.size - 1)
           if minus i
             sum
             else
             if #n ns@i >= #d m.dimensions@i
               error "Some index out of bounds"
               else rec (sum + #n * size, size * #d, i - 1)
         m.array)
