fold ({E} seq) with (R <- (R,E) fn) from left starting (R start)
  rec (result = start, i = seq.start)
    if i == seq.end
      result
      else rec (fn (result, seq@i), i + 1)

fold ({E} seq) with (R <- (E,R) fn) from right starting (R start)
  rec (result = start, i = seq.end)
    if i == seq.start
      result
      else rec (fn (seq@ #i (i - 1), result), #i)

fold ([E] tab) with (R <- (R,E) fn) from left starting (R start)
  fold (tableseq tab) with (fn) from left starting (start)

fold ([E] tab) with (R <- (E,R) fn) from right starting (R start)
  fold (tableseq tab) with (fn) from right starting (start)

fold (<List E> ls) with (R <- (R,E) fn) from left starting (R start)
  null ls
    start
    else fold ls.nxt with (fn) from left starting (fn (start, ls.elt))

fold (<List E> ls) with (R <- (E,R) fn) from right starting (R start)
  null ls
    start
    else
    fn (ls.elt, fold ls.nxt with (fn) from right starting (start))
