type Char = Int

Bool (Char a) < (Char b) = a as Int < b as Int

Bool (Char a) > (Char b) = a as Int > b as Int

Bool (Char a) <= (Char b) = a as Int <= b as Int

Bool (Char a) >= (Char b) = a as Int >= b as Int

Maybe Char (Char a) < (Char b) = if a as Int < b as Int -> a
                                    else -> nothing

Maybe Char (Char a) > (Char b) = if a as Int > b as Int -> a
                                    else -> nothing

Maybe Char (Char a) <= (Char b) = if a as Int <= b as Int -> a
                                     else -> nothing

Maybe Char (Char a) >= (Char b) = if a as Int >= b as Int -> a
                                     else -> nothing

Bool (Char a) < (Maybe Char b) = tcase b
                                   Nothing -> false
                                   Char -> a as Int < b as Int

Bool (Char a) > (Maybe Char b) = tcase b
                                   Nothing -> false
                                   Char -> a as Int > b as Int

Bool (Char a) =< (Maybe Char b) = tcase b
                                    Nothing -> false
                                    Char -> a as Int =< b as Int

Bool (Char a) => (Maybe Char b) = tcase b
                                    Nothing -> false
                                    Char -> a as Int => b as Int

Maybe Char (Char a) < (Maybe Char b) = tcase b
                                         Nothing -> nothing
                                         Char -> a as Int < b as Int

Maybe Char (Char a) > (Maybe Char b) = tcase b
                                         Nothing -> nothing
                                         Char -> a as Int > b as Int

Maybe Char (Char a) =< (Maybe Char b) = tcase b
                                          Nothing -> nothing
                                          Char -> a as Int =< b as Int

Maybe Char (Char a) => (Maybe Char b) = tcase b
                                          Nothing -> nothing
                                          Char -> a as Int => b as Int

Bool alpha (Char c)
  lower c | upper c

Bool alphaNumeric (Char c)
  alpha c | digit c

Int charToDigit (Char c)
  Int i = (c as Int) - (\0 as Int)
  range i
    (0,9) -> i
    _ -> error "Not a digit"

Bool digit (Char c)
  range c
    (\0,\9) -> true
    _ -> false

Bool lower (Char c)
  range c
    (\a,\z) -> true
    _ -> false

local Int diff = int \a - int \A

Char toLower (Char c)
  range c
    (\A,\Z) -> char (int c + diff)
    _ -> c

Char toUpper (Char c)
  range c
    (\a,\z) -> char (int c - diff)
    _ -> c

Bool upper (Char c)
  range c
    (\A,\Z) -> true
    _ -> false

Bool wordChar (Char c)
  alphaNumeric c | c == \_
